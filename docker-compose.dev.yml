version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: wordrush-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: wordrush
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - wordrush-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: wordrush-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - wordrush-network
    command: redis-server --appendonly yes

  # Backend Server (Development)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: wordrush-backend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/wordrush
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - wordrush-network
    command: npm run dev

  # Frontend Client (Development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: wordrush-frontend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    networks:
      - wordrush-network
    command: npm run dev

volumes:
  mongodb_dev_data:
  redis_dev_data:

networks:
  wordrush-network:
    driver: bridge
