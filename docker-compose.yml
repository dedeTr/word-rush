version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: wordrush-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: wordrush
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - wordrush-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: wordrush-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - wordrush-network

  # Backend Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: wordrush-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/wordrush?authSource=admin
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - wordrush-network

  # Frontend Client
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: wordrush-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    networks:
      - wordrush-network

volumes:
  mongodb_data:

networks:
  wordrush-network:
    driver: bridge
